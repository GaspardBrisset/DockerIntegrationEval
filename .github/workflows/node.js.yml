name: Node.js CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Docker CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Build Docker image
        run: |
          docker build -t my-node-app .
          # Assurez-vous d'ajuster le tag et le nom de l'image selon votre besoin

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

  e2e-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Run End-to-End Tests
        run: npm run e2e
        # Assurez-vous d'ajuster la commande pour les tests bout en bout

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test, e2e-test]

    steps:
      - name: Install Docker CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Deploy Docker image
        run: |
          # Écrire votre commande de déploiement d'image Docker ici
          # Exemple : docker push my-registry/my-node-app:latest

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # Écrire vos commandes SSH à exécuter à distance ici
            # Exemple : echo "Hello, world!"